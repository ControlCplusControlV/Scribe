---
source: src/parser.rs
assertion_line: 264
expression: "parse_to_tree(\"\n    let f := 1\n    let s := 1\n    let next\n    for { let i := 0 } lt(i, 10) { i := add(i, 1)}\n    {\n      if lt(i, 2) {\n        mstore(i, 1)\n      }\n      if gt(i, 1) {\n        next := add(s, f)\n        f := s\n        s := next\n        mstore(i, s)\n      }\n    }\")"

---
AST
├╼ declare - f
│ └╼ 1
├╼ declare - s
│ └╼ 1
├╼ declare - next
└╼ for loop
  ├╼ init block
  │ └╼ declare - i
  │   └╼ 0
  ├╼ conditional
  │ └╼ lt()
  │   ├╼ var - i
  │   └╼ 10
  ├╼ after block
  │ └╼ assign - i
  │   └╼ add()
  │     ├╼ var - i
  │     └╼ 1
  └╼ interior block
    ├╼ if statement
    │ └╼ conditional
    │   ├╼ lt()
    │   │ ├╼ var - i
    │   │ └╼ 2
    │   └╼ mstore()
    │     ├╼ var - i
    │     └╼ 1
    └╼ if statement
      └╼ conditional
        ├╼ gt()
        │ ├╼ var - i
        │ └╼ 1
        ├╼ assign - next
        │ └╼ add()
        │   ├╼ var - s
        │   └╼ var - f
        ├╼ assign - f
        │ └╼ var - s
        ├╼ assign - s
        │ └╼ var - next
        └╼ mstore()
          ├╼ var - i
          └╼ var - s
